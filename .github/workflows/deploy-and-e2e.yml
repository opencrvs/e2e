name: Deploy & run E2E
run-name: 'E2E by ${{ github.event.client_payload.actor || github.actor }} to ${{ github.event.client_payload.stack || github.event.inputs.stack }}. Images core: ${{ github.event.client_payload.core-image-tag || github.event.inputs.core-image-tag }} and farajaland: ${{ github.event.client_payload.countryconfig-image-tag || github.event.inputs.countryconfig-image-tag }}'
on:
  repository_dispatch:
    types: [run_e2e]
  workflow_dispatch:
    inputs:
      core-image-tag:
        description: Core DockerHub image tag
        required: true
        default: 'v1.4.1'
      countryconfig-image-tag:
        description: Your Country Config DockerHub image tag
        required: true
        default: 'v1.4.1'
      stack:
        type: string
        description: Stack name
        required: true

concurrency:
  group: ${{ github.event.client_payload.stack || github.event.inputs.stack }}
  cancel-in-progress: true

jobs:
  deploy:
    uses: ./.github/workflows/deploy.yml
    with:
      core-image-tag: ${{ github.event.client_payload.core-image-tag || github.event.inputs.core-image-tag }}
      countryconfig-image-tag: ${{ github.event.client_payload.countryconfig-image-tag || github.event.inputs.countryconfig-image-tag }}
      stack: ${{ github.event.client_payload.stack || github.event.inputs.stack }}
      dependencies: false
      reset: 'true'
    secrets: inherit

  discover-tests:
    name: Discover test directories
    runs-on: ubuntu-22.04
    outputs:
      test_matrix: ${{ steps.list-tests.outputs.test_matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: List Test Directories
        id: list-tests
        run: |
          test_dirs=$(find ./e2e/testcases -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | jq -R -s -c 'split("\n")[:-1]')
          echo "Test directories: $test_dirs"
          echo "test_matrix=$test_dirs" >> $GITHUB_OUTPUT
          echo "test_matrix=$test_dirs"

  test:
    needs: [deploy, discover-tests]
    runs-on: ubuntu-22.04
    environment: ${{ github.event.client_payload.stack || github.event.inputs.stack }}
    strategy:
      fail-fast: false
      matrix:
        test_dir: ${{ fromJson(needs.discover-tests.outputs.test_matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'opencrvs/opencrvs-farajaland'
          fetch-depth: 0

      - name: Checkout country branch
        run: |
          git checkout ${{ github.event.client_payload.countryconfig-image-tag || github.event.inputs.countryconfig-image-tag }}

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Check for Spec Files
        id: check-specs
        run: |
          if ls ./e2e/testcases/${{ matrix.test_dir }}/*.spec.ts > /dev/null 2>&1; then
            echo "::set-output name=has_spec_files::true"
          else
            echo "::set-output name=has_spec_files::false"
          fi

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/yarn/v6
          key: node-${{ hashFiles('**/yarn.lock', format('{0}/{1}',matrix.package,'package.json')) }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.check-specs.outputs.has_spec_files == 'true'
        run: yarn

      - name: Install Playwright Browsers
        if: steps.check-specs.outputs.has_spec_files == 'true'
        run: npx playwright install --with-deps

      - name: Run Playwright Tests
        if: steps.check-specs.outputs.has_spec_files == 'true'
        run: npx playwright test ./e2e/testcases/${{ matrix.test_dir }}
        env:
          DOMAIN: '${{ github.event.client_payload.stack || inputs.stack }}.${{ vars.DOMAIN }}'

      - uses: actions/upload-artifact@v4
        if: always() && steps.check-specs.outputs.has_spec_files == 'true'
        with:
          name: playwright-report-${{ matrix.test_dir }}
          path: playwright-report/
          retention-days: 30

  get-previous-run:
    runs-on: ubuntu-latest
    outputs:
      previous_run_result: ${{ steps.set-output.outputs.result }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Previous Run Conclusion
        id: get-previous-conclusion
        run: |
          previous_conclusion=$(gh run list --limit 1 --status=completed --workflow="Deploy & run E2E" --json conclusion -q '.[0].conclusion')
          echo "PREVIOUS_CONCLUSION=$previous_conclusion" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Set Output Based on Conclusion
        id: set-output
        run: |
          echo "result=$PREVIOUS_CONCLUSION" >> $GITHUB_OUTPUT
