version: '3.8'
services:
  hearth:
    image: opencrvs/hearth:1.1.0
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - mongodb__url=mongodb://${STACK}__hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/${STACK}__hearth-dev?replicaSet=rs0
      - logger__level=warn
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    configs:
      - source: hearth-dupe.{{ts}}
        target: /src/hearth/lib/plugins/checkDuplicateTask.js
      - source: hearth-ext-conf.{{ts}}
        target: /src/hearth/config/queryparam-extensions.json
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'hearth'

  notification:
    image: opencrvs/ocrvs-notification:${VERSION}
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - LANGUAGES=en,fr
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - MONGO_URL=mongodb://${STACK}__notification:${NOTIFICATION_MONGODB_PASSWORD}@mongo1/${STACK}__notification?replicaSet=rs0
      - COUNTRY_CONFIG_URL=http://countryconfig.{{STACK}}_{{STACK}}_app_net:3040
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'notification'

  countryconfig:
    image: ${DOCKERHUB_ACCOUNT}/${DOCKERHUB_REPO}:${COUNTRY_CONFIG_VERSION}
    restart: unless-stopped
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${STACK}__countryconfig.rule=(Host(`countryconfig.${STACK}.{{hostname}}`) || Host(`registry.${STACK}.{{hostname}}`)) && !Path(`/email`) && !Path(`/notification`) && !Path(`/dashboards/queries.json`)'
        - 'traefik.http.services.${STACK}__countryconfig.loadbalancer.server.port=3040'
        - 'traefik.http.routers.${STACK}__countryconfig.entrypoints=web'
        - 'traefik.http.routers.${STACK}__countryconfig.middlewares=gzip-compression'
        - 'traefik.docker.network=dependencies_{{STACK}}_dependencies_net'
        - 'traefik.http.middlewares.${STACK}__countryconfig.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.${STACK}__countryconfig.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.${STACK}__countryconfig.headers.customresponseheaders.X-Robots-Tag=none'
        # This is an invalid IP range, effectively blocking all IPs from accessing below paths.
        # It's only meant to be accessed from the internal docker network.
        - 'traefik.http.middlewares.${STACK}__block-internal-routes.ipwhitelist.sourcerange=255.255.255.255'
        - 'traefik.http.routers.${STACK}__block-email.rule=Host(`countryconfig.${STACK}.{{hostname}}`) && Path(`/email`)'
        - 'traefik.http.routers.${STACK}__block-email.middlewares=${STACK}__block-internal-routes'
        - 'traefik.http.routers.${STACK}__block-notification.rule=Host(`countryconfig.${STACK}.{{hostname}}`) && Path(`/notification`)'
        - 'traefik.http.routers.${STACK}__block-notification.middlewares=${STACK}__block-internal-routes'
        - 'traefik.http.routers.${STACK}__block-dashboard-queries.rule=Host(`countryconfig.${STACK}.{{hostname}}`) && Path(`/dashboards/queries.json`)'
        - 'traefik.http.routers.${STACK}__block-dashboard-queries.middlewares=${STACK}__block-internal-routes'
      replicas: 1
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - FHIR_URL=http://hearth.{{STACK}}_{{STACK}}_app_net:3447/fhir
      - AUTH_URL=http://auth.{{STACK}}_{{STACK}}_app_net:4040
      - APPLICATION_CONFIG_URL=http://config.{{STACK}}_{{STACK}}_app_net:2021
      - CONFIRM_REGISTRATION_URL=http://workflow.{{STACK}}_{{STACK}}_app_net:5050/confirm/registration
      - MONGO_URL=mongodb://mongo1/${STACK}__user-mgnt?replicaSet=rs0
      - CONFIG_MONGO_URL=mongodb://mongo1/${STACK}__application-config?replicaSet=rs0
      - APN_SERVICE_URL=http://apm-server:8200
      - COUNTRY_CONFIG_URL=https://countryconfig.${STACK}.{{hostname}}
      - LOGIN_URL=https://login.${STACK}.{{hostname}}
      - CLIENT_APP_URL=https://register.${STACK}.{{hostname}}
      - SENDER_EMAIL_ADDRESS=${SENDER_EMAIL_ADDRESS}
      # This needs to be the internal swarm url
      # as containers cannot connect to the web
      - GATEWAY_URL=http://gateway.{{STACK}}_{{STACK}}_app_net:7070
      - NOTIFICATION_TRANSPORT=${NOTIFICATION_TRANSPORT}
      - ALERT_EMAIL=${ALERT_EMAIL:-}
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_SECURE=${SMTP_SECURE:-}
      - INFOBIP_GATEWAY_ENDPOINT=${INFOBIP_GATEWAY_ENDPOINT:-}
      - INFOBIP_API_KEY=${INFOBIP_API_KEY:-}
      - INFOBIP_SENDER_ID=${INFOBIP_SENDER_ID:-}
      - DOMAIN=${STACK}.{{hostname}}
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'countryconfig'

  login:
    image: opencrvs/ocrvs-login:${VERSION}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - COUNTRY_CONFIG_URL=https://countryconfig.${STACK}.{{hostname}}
      - CONTENT_SECURITY_POLICY_WILDCARD=${CONTENT_SECURITY_POLICY_WILDCARD}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${STACK}__login.rule=Host(`login.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.${STACK}__login.loadbalancer.server.port=80'
        - 'traefik.http.routers.${STACK}__login.entrypoints=web'
        - 'traefik.http.routers.${STACK}__login.middlewares=gzip-compression'
        - 'traefik.docker.network=dependencies_{{STACK}}_dependencies_net'
        - 'traefik.http.middlewares.${STACK}__login.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.${STACK}__login.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.${STACK}__login.headers.customresponseheaders.X-Robots-Tag=none'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'login'

  client:
    image: opencrvs/ocrvs-client:${VERSION}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - DECLARED_DECLARATION_SEARCH_QUERY_COUNT=100
      - COUNTRY_CONFIG_URL=https://countryconfig.${STACK}.{{hostname}}
      - CONTENT_SECURITY_POLICY_WILDCARD=${CONTENT_SECURITY_POLICY_WILDCARD}
      - MINIO_URL=https://minio.{{hostname}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${STACK}__client.rule=Host(`register.${STACK}.{{hostname}}`,`${STACK}.{{hostname}}`)'
        - 'traefik.http.routers.${STACK}__client.middlewares=${STACK}__test-replacepathregex,gzip-compression'
        - 'traefik.http.services.${STACK}__client.loadbalancer.server.port=80'
        - 'traefik.http.routers.${STACK}__client.entrypoints=web'
        - 'traefik.docker.network=dependencies_{{STACK}}_dependencies_net'

        - 'traefik.http.middlewares.${STACK}__test-replacepathregex.redirectregex.permanent=true'
        - 'traefik.http.middlewares.${STACK}__test-replacepathregex.redirectregex.regex=^https?://${STACK}.{{hostname}}/(.*)'
        - 'traefik.http.middlewares.${STACK}__test-replacepathregex.redirectregex.replacement=https://register.${STACK}.{{hostname}}/$${1}'
        - 'traefik.http.middlewares.${STACK}__client.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.${STACK}__client.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.${STACK}__client.headers.customresponseheaders.X-Robots-Tag=none'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'client'

  gateway:
    image: opencrvs/ocrvs-gateway:${VERSION}
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - LANGUAGES=en,fr
      - SENTRY_DSN=${SENTRY_DSN:-}
      - DISABLE_RATE_LIMIT=true
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - LOGIN_URL=https://login.${STACK}.{{hostname}}
      - CLIENT_APP_URL=https://register.${STACK}.{{hostname}}
      - DOMAIN=${STACK}.{{hostname}}
      - MINIO_BUCKET=${STACK}--ocrvs
      - REDIS_HOST=redis
      - CONFIG_SMS_CODE_EXPIRY_SECONDS=600
      - CONFIG_TOKEN_EXPIRY_SECONDS=604800
      - FHIR_URL=http://hearth.{{STACK}}_{{STACK}}_app_net:3447/fhir
      - USER_MANAGEMENT_URL=http://user-mgnt.{{STACK}}_{{STACK}}_app_net:3030/
      - SEARCH_URL=http://search.{{STACK}}_{{STACK}}_app_net:9090/
      - METRICS_URL=http://metrics.{{STACK}}_{{STACK}}_app_net:1050
      - AUTH_URL=http://auth.{{STACK}}_{{STACK}}_app_net:4040
      - COUNTRY_CONFIG_URL=http://countryconfig.{{STACK}}_{{STACK}}_app_net:3040
      - NOTIFICATION_URL=http://notification.{{STACK}}_{{STACK}}_app_net:2020/
      - WORKFLOW_URL=http://workflow.{{STACK}}_{{STACK}}_app_net:5050/
      - APPLICATION_CONFIG_URL=http://config.{{STACK}}_{{STACK}}_app_net:2021/
      - WEBHOOKS_URL=http://webhooks.{{STACK}}_{{STACK}}_app_net:2525/
      - CHECK_INVALID_TOKEN=true
      - DOCUMENTS_URL=http://documents.{{STACK}}_{{STACK}}_app_net:9050
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${STACK}__gateway.rule=Host(`gateway.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.${STACK}__gateway.loadbalancer.server.port=7070'
        - 'traefik.http.routers.${STACK}__gateway.entrypoints=web'
        - 'traefik.http.routers.${STACK}__gateway.middlewares=gzip-compression'
        - 'traefik.docker.network=dependencies_{{STACK}}_dependencies_net'
        - 'traefik.http.middlewares.${STACK}__gateway.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.${STACK}__gateway.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.${STACK}__gateway.headers.customresponseheaders.X-Robots-Tag=none'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'gateway'

  workflow:
    image: opencrvs/ocrvs-workflow:${VERSION}
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - LANGUAGES=en,fr
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - SEARCH_URL=http://search.{{STACK}}_{{STACK}}_app_net:9090/
      - METRICS_URL=http://metrics.{{STACK}}_{{STACK}}_app_net:1050
      - DOCUMENTS_URL=http://documents.{{STACK}}_{{STACK}}_app_net:9050
      - NOTIFICATION_SERVICE_URL=http://notification.{{STACK}}_{{STACK}}_app_net:2020/
      - USER_MANAGEMENT_URL=http://user-mgnt.{{STACK}}_{{STACK}}_app_net:3030/
      - COUNTRY_CONFIG_URL=http://countryconfig.{{STACK}}_{{STACK}}_app_net:3040
      - FHIR_URL=http://hearth.{{STACK}}_{{STACK}}_app_net:3447/fhir
      - WEBHOOKS_URL=http://webhooks.{{STACK}}_{{STACK}}_app_net:2525/
      - APPLICATION_CONFIG_URL=http://config.{{STACK}}_{{STACK}}_app_net:2021/
      - COUNTRY=${COUNTRY:-bgd}
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'workflow'

  search:
    image: opencrvs/ocrvs-search:${VERSION}
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - OPENCRVS_INDEX_NAME=ocrvs--${STACK}
      - ES_HOST={{STACK}}-search-user:${ROTATING_SEARCH_ELASTIC_PASSWORD}@elasticsearch:9200
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - HEARTH_MONGO_URL=mongodb://${STACK}__hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/${STACK}__hearth-dev?replicaSet=rs0
      - USER_MANAGEMENT_URL=http://user-mgnt.{{STACK}}_{{STACK}}_app_net:3030/
      - FHIR_URL=http://hearth.{{STACK}}_{{STACK}}_app_net:3447/fhir
      - APPLICATION_CONFIG_URL=http://config.{{STACK}}_{{STACK}}_app_net:2021/
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'search'
  setup-elasticsearch-users:
    image: ubuntu:bionic
    entrypoint: ['bash', '/usr/app/setup.sh']
    restart: on-failure
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTIC_PASSWORD=${ELASTICSEARCH_SUPERUSER_PASSWORD}
      - METRICBEAT_ELASTIC_PASSWORD=${ROTATING_METRICBEAT_ELASTIC_PASSWORD}
      - APM_ELASTIC_PASSWORD=${ROTATING_APM_ELASTIC_PASSWORD}
      - SEARCH_ELASTIC_USERNAME={{STACK}}-search-user
      - SEARCH_ELASTIC_PASSWORD=${ROTATING_SEARCH_ELASTIC_PASSWORD}
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
      - KIBANA_USERNAME=${KIBANA_USERNAME}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
    volumes:
      - '/opt/opencrvs/infrastructure/elasticsearch:/usr/app'
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'setup-elasticsearch-users'

  metrics:
    image: opencrvs/ocrvs-metrics:${VERSION}
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    volumes:
      - /data/vsexport:/usr/src/app/packages/metrics/src/scripts
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - MONGO_URL=mongodb://${STACK}__metrics:${METRICS_MONGODB_PASSWORD}@mongo1/${STACK}__metrics?replicaSet=rs0
      - HEARTH_MONGO_URL=mongodb://${STACK}__hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/${STACK}__hearth-dev?replicaSet=rs0
      - DASHBOARD_MONGO_URL=mongodb://${STACK}__performance:${PERFORMANCE_MONGODB_PASSWORD}@mongo1/${STACK}__performance?replicaSet=rs0
      - INFLUX_HOST=influxdb
      - INFLUX_PORT=8086
      - INFLUX_DB=${STACK}_ocrvs
      - COUNTRY_CONFIG_URL=http://countryconfig.{{STACK}}_{{STACK}}_app_net:3040/
      - CONFIG_API_URL=http://config.{{STACK}}_{{STACK}}_app_net:2021
      - SEARCH_URL=http://search.{{STACK}}_{{STACK}}_app_net:9090/
      - USER_MANAGEMENT_URL=http://user-mgnt.{{STACK}}_{{STACK}}_app_net:3030
      - DOCUMENTS_URL=http://documents.{{STACK}}_{{STACK}}_app_net:9050
      - FHIR_URL=http://hearth.{{STACK}}_{{STACK}}_app_net:3447/fhir
    deploy:
      placement:
        constraints:
          - node.labels.data1 == true
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'metrics'

  auth:
    image: opencrvs/ocrvs-auth:${VERSION}
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
      - jwt-private-key.{{STACK}}.{{ts}}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PRIVATE_KEY_PATH=/run/secrets/jwt-private-key.{{STACK}}.{{ts}}
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - LOGIN_URL=https://login.${STACK}.{{hostname}}
      - COUNTRY_CONFIG_URL=https://countryconfig.${STACK}.{{hostname}}
      - CLIENT_APP_URL=https://register.${STACK}.{{hostname}}
      - DOMAIN=${STACK}.{{hostname}}
      - REDIS_HOST=redis
      - USER_MANAGEMENT_URL=http://user-mgnt.{{STACK}}_{{STACK}}_app_net:3030/
      - CONFIG_TOKEN_EXPIRY_SECONDS=604800
      - CONFIG_SMS_CODE_EXPIRY_SECONDS=600
      - NOTIFICATION_SERVICE_URL=http://notification.{{STACK}}_{{STACK}}_app_net:2020/
      - METRICS_URL=http://metrics.{{STACK}}_{{STACK}}_app_net:1050
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${STACK}__auth.rule=Host(`auth.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.${STACK}__auth.loadbalancer.server.port=4040'
        - 'traefik.http.routers.${STACK}__auth.entrypoints=web'
        - 'traefik.docker.network=dependencies_{{STACK}}_dependencies_net'
        - 'traefik.http.middlewares.${STACK}__auth.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.${STACK}__auth.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.${STACK}__auth.headers.customresponseheaders.X-Robots-Tag=none'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'auth'

  user-mgnt:
    image: opencrvs/ocrvs-user-mgnt:${VERSION}
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - RECORD_SEARCH_QUOTA=2000
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - MONGO_URL=mongodb://${STACK}__user-mgnt:${USER_MGNT_MONGODB_PASSWORD}@mongo1/${STACK}__user-mgnt?replicaSet=rs0
      - NOTIFICATION_SERVICE_URL=http://notification.{{STACK}}_{{STACK}}_app_net:2020/
      - METRICS_URL=http://metrics.{{STACK}}_{{STACK}}_app_net:1050
      - FHIR_URL=http://hearth.{{STACK}}_{{STACK}}_app_net:3447/fhir
      - APPLICATION_CONFIG_URL=http://config.{{STACK}}_{{STACK}}_app_net:2021/
      - DOCUMENTS_URL=http://documents.{{STACK}}_{{STACK}}_app_net:9050
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'user-mgnt'

  webhooks:
    image: opencrvs/ocrvs-webhooks:${VERSION}
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - MONGO_URL=mongodb://${STACK}__webhooks:${WEBHOOKS_MONGODB_PASSWORD}@mongo1/${STACK}__webhooks?replicaSet=rs0
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - REDIS_HOST=redis
      - AUTH_URL=http://auth.{{STACK}}_{{STACK}}_app_net:4040
      - USER_MANAGEMENT_URL=http://user-mgnt.{{STACK}}_{{STACK}}_app_net:3030/
      - CHECK_INVALID_TOKEN=true
      - FHIR_URL=http://hearth.{{STACK}}_{{STACK}}_app_net:3447/fhir
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${STACK}__webhooks.rule=Host(`webhooks.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.${STACK}__webhooks.loadbalancer.server.port=2525'
        - 'traefik.http.routers.${STACK}__webhooks.entrypoints=web'
        - 'traefik.docker.network=dependencies_{{STACK}}_dependencies_net'
        - 'traefik.http.middlewares.${STACK}__webhooks.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.${STACK}__webhooks.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.${STACK}__webhooks.headers.customresponseheaders.X-Robots-Tag=none'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'webhooks'

  config:
    image: opencrvs/ocrvs-config:${VERSION}
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - MONGO_URL=mongodb://${STACK}__config:${CONFIG_MONGODB_PASSWORD}@mongo1/${STACK}__application-config?replicaSet=rs0
      - LOGIN_URL=https://login.${STACK}.{{hostname}}
      - CLIENT_APP_URL=https://register.${STACK}.{{hostname}}
      - DOMAIN=${STACK}.{{hostname}}
      - AUTH_URL=http://auth.{{STACK}}_{{STACK}}_app_net:4040
      - COUNTRY_CONFIG_URL=http://countryconfig.{{STACK}}_{{STACK}}_app_net:3040
      - SEARCH_URL=http://search.{{STACK}}_{{STACK}}_app_net:9090/
      - METRICS_URL=http://metrics.{{STACK}}_{{STACK}}_app_net:1050
      - USER_MANAGEMENT_URL=http://user-mgnt.{{STACK}}_{{STACK}}_app_net:3030/
      - FHIR_URL=http://hearth.{{STACK}}_{{STACK}}_app_net:3447/fhir
      - GATEWAY_URL=http://gateway.{{STACK}}_{{STACK}}_app_net:7070/
      - DOCUMENTS_URL=http://documents.{{STACK}}_{{STACK}}_app_net:9050
      - CHECK_INVALID_TOKEN=true
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${STACK}__config.rule=Host(`config.${STACK}.{{hostname}}`) && !Path(`/dashboardQueries`)'
        - 'traefik.http.services.${STACK}__config.loadbalancer.server.port=2021'
        - 'traefik.http.routers.${STACK}__config.entrypoints=web'
        - 'traefik.docker.network=dependencies_{{STACK}}_dependencies_net'
        - 'traefik.http.middlewares.${STACK}__config.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.${STACK}__config.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.${STACK}__config.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.${STACK}__block-internal-routes.ipwhitelist.sourcerange=255.255.255.255'
        - 'traefik.http.routers.${STACK}__block-dashboard-queries.rule=Host(`countryconfig.${STACK}.{{hostname}}`) && Path(`/dashboardQueries`)'
        - 'traefik.http.routers.${STACK}__block-dashboard-queries.middlewares=${STACK}__block-internal-routes'
      replicas: 1
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'config'

  documents:
    image: opencrvs/ocrvs-documents:${VERSION}
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
    secrets:
      - jwt-public-key.{{STACK}}.{{ts}}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - NODE_ENV=production
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{STACK}}.{{ts}}
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_URL=minio.{{hostname}}
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_BUCKET=${STACK}--ocrvs
      - COUNTRY_CONFIG_URL=http://countryconfig.{{STACK}}_{{STACK}}_app_net:3040
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'documents'

  scheduler:
    image: opencrvs/ocrvs-scheduler:${VERSION}
    environment:
      - QA_ENV=true
      - NODE_ENV=production
      - METRICS_URL=http://metrics.{{STACK}}_{{STACK}}_app_net:1050
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'scheduler'

  migration:
    image: opencrvs/ocrvs-migration:${VERSION}
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - ELASTICSEARCH_INDEX_NAME=ocrvs--${STACK}
      - USER_MGNT_MONGO_URL=mongodb://${STACK}__user-mgnt:${USER_MGNT_MONGODB_PASSWORD}@mongo1/${STACK}__user-mgnt?replicaSet=rs0
      - PERFORMANCE_MONGO_URL=mongodb://${STACK}__performance:${PERFORMANCE_MONGODB_PASSWORD}@mongo1/${STACK}__performance?replicaSet=rs0
      - APPLICATION_CONFIG_MONGO_URL=mongodb://${STACK}__config:${CONFIG_MONGODB_PASSWORD}@mongo1/${STACK}__application-config?replicaSet=rs0
      - HEARTH_MONGO_URL=mongodb://${STACK}__hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/${STACK}__hearth-dev?replicaSet=rs0
      - OPENHIM_MONGO_URL=mongodb://${STACK}__openhim:${OPENHIM_MONGODB_PASSWORD}@mongo1/${STACK}__openhim-dev?replicaSet=rs0
      - ES_HOST={{STACK}}-search-user:${ROTATING_SEARCH_ELASTIC_PASSWORD}@elasticsearch:9200
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_BUCKET=${STACK}--ocrvs
      - SUPER_USER_PASSWORD=${SUPER_USER_PASSWORD}
      - STACK=${STACK}
      - DASHBOARD_MONGO_URL=mongodb://mongo1/${STACK}__performance
      - SEARCH_URL=http://search.{{STACK}}_{{STACK}}_app_net:9090/
      - INFLUX_HOST=influxdb
      - INFLUX_PORT=8086
      - INFLUX_DB=${STACK}_ocrvs
      - WAIT_HOSTS=mongo1:27017,influxdb:8086,minio:9000,elasticsearch:9200
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'migration'
  mongo-on-update:
    image: mongo:4.4
    command: bash /on-deploy.sh
    configs:
      - source: mongo-on-deploy.{{ts}}
        target: /on-deploy.sh
    deploy:
      labels:
        - traefik.enable=false
      replicas: 1
      restart_policy:
        condition: none
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      - REPLICAS=1
      - DATABASE_PREFIX=${STACK}
      - MONGODB_ADMIN_USER=${MONGODB_ADMIN_USER}
      - MONGODB_ADMIN_PASSWORD=${MONGODB_ADMIN_PASSWORD}
      - USER_MGNT_MONGODB_PASSWORD=${USER_MGNT_MONGODB_PASSWORD}
      - HEARTH_MONGODB_PASSWORD=${HEARTH_MONGODB_PASSWORD}
      - CONFIG_MONGODB_PASSWORD=${CONFIG_MONGODB_PASSWORD}
      - PERFORMANCE_MONGODB_PASSWORD=${PERFORMANCE_MONGODB_PASSWORD}
      - METRICS_MONGODB_PASSWORD=${METRICS_MONGODB_PASSWORD}
      - OPENHIM_MONGODB_PASSWORD=${OPENHIM_MONGODB_PASSWORD}
      - WEBHOOKS_MONGODB_PASSWORD=${WEBHOOKS_MONGODB_PASSWORD}
      - NOTIFICATION_MONGODB_PASSWORD=${NOTIFICATION_MONGODB_PASSWORD}
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'mongo-on-update'

  dashboards:
    image: opencrvs/ocrvs-dashboards:${VERSION}
    volumes:
      - /data/metabase:/data/metabase
      # Exceed Docker config file 500 kb file limit, thus a volume mount
      - /opt/opencrvs/infrastructure/metabase/metabase.init.db.sql:/metabase.init.db.sql
    networks:
      - {{STACK}}_app_net
      - dependencies_{{STACK}}_dependencies_net
    environment:
      - QA_ENV=true
      - HOST=0.0.0.0
      # Note that only mongo1 is used here on purpose for all environments
      # https://discourse.metabase.com/t/solved-add-mongodb-replicaset-database/7404/2
      - OPENCRVS_METABASE_DB_HOST=mongo1
      - OPENCRVS_METABASE_DB_USER=performance
      - OPENCRVS_METABASE_DB_PASS=${PERFORMANCE_MONGODB_PASSWORD}
      - OPENCRVS_METABASE_DB_AUTH_DB=${STACK}__performance
      - OPENCRVS_METABASE_SITE_NAME=OpenCRVS Dashboards
      - OPENCRVS_METABASE_SITE_URL=http://metabase.${STACK}.{{hostname}}
      - OPENCRVS_METABASE_MAP_NAME=Farajaland
      - OPENCRVS_METABASE_MAP_URL=http://countryconfig:3040/content/map.geojson
      - OPENCRVS_METABASE_MAP_REGION_KEY=State
      - OPENCRVS_METABASE_MAP_REGION_NAME=State
      - OPENCRVS_METABASE_ADMIN_EMAIL=${OPENCRVS_METABASE_ADMIN_EMAIL}
      - OPENCRVS_METABASE_ADMIN_PASSWORD=${OPENCRVS_METABASE_ADMIN_PASSWORD}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.${STACK}__metabase.rule=Host(`metabase.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.${STACK}__metabase.loadbalancer.server.port=4444'
        - 'traefik.http.routers.${STACK}__metabase.entrypoints=web'
        - 'traefik.docker.network=dependencies_{{STACK}}_dependencies_net'
        - 'traefik.http.middlewares.${STACK}__metabase.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.${STACK}__metabase.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.${STACK}__metabase.headers.customresponseheaders.X-Robots-Tag=none'
      replicas: 1
      placement:
        constraints:
          - node.labels.data1 == true
secrets:
  jwt-public-key.{{STACK}}.{{ts}}:
    external: true
  jwt-private-key.{{STACK}}.{{ts}}:
    external: true
configs:
  hearth-dupe.{{ts}}:
    file: /opt/opencrvs/infrastructure/hearth-plugins/checkDuplicateTask.js
  hearth-ext-conf.{{ts}}:
    file: /opt/opencrvs/infrastructure/hearth-queryparam-extensions.json
  mongo-on-deploy.{{ts}}:
    file: /opt/opencrvs/infrastructure/mongodb/on-deploy.sh
networks:
  dependencies_{{STACK}}_dependencies_net:
    external: true
  {{STACK}}_app_net:
    driver: overlay
    attachable: true
