services:
  hearth:
    image: opencrvs/hearth:1.1.0
    environment:
      - mongodb__url=mongodb://hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/${STACK}__hearth-dev?replicaSet=rs0
      - logger__level=warn
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    secrets:
      - jwt-public-key.{{ts}}
    configs:
      - source: hearth-check-dupe-plugin.{{ts}}
        target: /src/hearth/lib/plugins/checkDuplicateTask.js
      - source: hearth-queryparam-extensions-conf.{{ts}}
        target: /src/hearth/config/queryparam-extensions.json
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'hearth'

  notification:
    image: opencrvs/ocrvs-notification:${VERSION}
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - LANGUAGES=en,fr
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://notification:${NOTIFICATION_MONGODB_PASSWORD}@mongo1/${STACK}__notification?replicaSet=rs0
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'notification'

  countryconfig:
    image: ${DOCKERHUB_ACCOUNT}/${DOCKERHUB_REPO}:${COUNTRY_CONFIG_VERSION}
    restart: unless-stopped
    secrets:
      - jwt-public-key.{{ts}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.countryconfig.rule=(Host(`countryconfig.${STACK}.{{hostname}}`) || Host(`registry.${STACK}.{{hostname}}`)) && !Path(`/email`) && !Path(`/notification`) && !Path(`/dashboards/queries.json`)'
        - 'traefik.http.services.countryconfig.loadbalancer.server.port=3040'
        - 'traefik.http.routers.countryconfig.tls=true'
        - 'traefik.http.routers.countryconfig.tls.certresolver=certResolver'
        - 'traefik.http.routers.countryconfig.entrypoints=web,websecure'
        - 'traefik.http.routers.countryconfig.middlewares=gzip-compression'
        - 'traefik.docker.network=dependencies_overlay_net'
        - 'traefik.http.middlewares.countryconfig.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.countryconfig.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.countryconfig.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.countryconfig.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.countryconfig.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.countryconfig.headers.stspreload=true'
        # This is an invalid IP range, effectively blocking all IPs from accessing below paths.
        # It's only meant to be accessed from the internal docker network.
        - 'traefik.http.middlewares.block-internal-routes.ipwhitelist.sourcerange=255.255.255.255'
        - 'traefik.http.routers.block-email.rule=Host(`countryconfig.${STACK}.{{hostname}}`) && Path(`/email`)'
        - 'traefik.http.routers.block-email.middlewares=block-internal-routes'
        - 'traefik.http.routers.block-notification.rule=Host(`countryconfig.${STACK}.{{hostname}}`) && Path(`/notification`)'
        - 'traefik.http.routers.block-notification.middlewares=block-internal-routes'
        - 'traefik.http.routers.block-dashboard-queries.rule=Host(`countryconfig.${STACK}.{{hostname}}`) && Path(`/dashboards/queries.json`)'
        - 'traefik.http.routers.block-dashboard-queries.middlewares=block-internal-routes'
      replicas: 1
    environment:
      - NODE_ENV=production
      - FHIR_URL=http://hearth:3447/fhir
      - AUTH_URL=http://auth:4040
      - APPLICATION_CONFIG_URL=http://config:2021
      - CONFIRM_REGISTRATION_URL=http://workflow:5050/confirm/registration
      - MONGO_URL=mongodb://mongo1/${STACK}__user-mgnt?replicaSet=rs0
      - CONFIG_MONGO_URL=mongodb://mongo1/${STACK}__application-config?replicaSet=rs0
      - APN_SERVICE_URL=http://apm-server:8200
      - COUNTRY_CONFIG_URL=https://countryconfig.${STACK}.{{hostname}}
      - LOGIN_URL=https://login.${STACK}.{{hostname}}
      # This needs to be the internal swarm url
      # as containers cannot connect to the web
      - GATEWAY_URL=http://gateway:7070
      - CLIENT_APP_URL=https://register.${STACK}.{{hostname}}
      - NOTIFICATION_TRANSPORT=${NOTIFICATION_TRANSPORT}
      - ALERT_EMAIL=${ALERT_EMAIL:-}
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_SECURE=${SMTP_SECURE:-}
      - INFOBIP_GATEWAY_ENDPOINT=${INFOBIP_GATEWAY_ENDPOINT:-}
      - INFOBIP_API_KEY=${INFOBIP_API_KEY:-}
      - INFOBIP_SENDER_ID=${INFOBIP_SENDER_ID:-}
      - DOMAIN=${STACK}.{{hostname}}
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'countryconfig'

  login:
    image: opencrvs/ocrvs-login:${VERSION}
    environment:
      - COUNTRY_CONFIG_URL=https://countryconfig.${STACK}.{{hostname}}
      - CONTENT_SECURITY_POLICY_WILDCARD=${CONTENT_SECURITY_POLICY_WILDCARD}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.login.rule=Host(`login.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.login.loadbalancer.server.port=80'
        - 'traefik.http.routers.login.tls=true'
        - 'traefik.http.routers.login.tls.certresolver=certResolver'
        - 'traefik.http.routers.login.entrypoints=web,websecure'
        - 'traefik.http.routers.login.middlewares=gzip-compression'
        - 'traefik.docker.network=dependencies_overlay_net'
        - 'traefik.http.middlewares.login.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.login.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.login.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.login.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.login.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.login.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'login'

  client:
    image: opencrvs/ocrvs-client:${VERSION}
    environment:
      - DECLARED_DECLARATION_SEARCH_QUERY_COUNT=100
      - COUNTRY_CONFIG_URL=https://countryconfig.${STACK}.{{hostname}}
      - CONTENT_SECURITY_POLICY_WILDCARD=${CONTENT_SECURITY_POLICY_WILDCARD}
      - MINIO_URL=https://minio.${STACK}.{{hostname}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.client.rule=Host(`register.${STACK}.{{hostname}}`,`${STACK}.{{hostname}}`)'
        - 'traefik.http.routers.client.middlewares=test-replacepathregex,gzip-compression'
        - 'traefik.http.routers.client.service=client'
        - 'traefik.http.services.client.loadbalancer.server.port=80'
        - 'traefik.http.routers.client.tls=true'
        - 'traefik.http.routers.client.tls.certresolver=certResolver'
        - 'traefik.http.routers.client.entrypoints=web,websecure'
        - 'traefik.docker.network=dependencies_overlay_net'

        - 'traefik.http.middlewares.test-replacepathregex.redirectregex.permanent=true'
        - 'traefik.http.middlewares.test-replacepathregex.redirectregex.regex=^https?://${STACK}.{{hostname}}/(.*)'
        - 'traefik.http.middlewares.test-replacepathregex.redirectregex.replacement=https://register.${STACK}.{{hostname}}/$${1}'

        - 'traefik.http.middlewares.client.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.client.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.client.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.client.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.client.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.client.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'client'

  gateway:
    image: opencrvs/ocrvs-gateway:${VERSION}
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - LANGUAGES=en,fr
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - LOGIN_URL=https://login.${STACK}.{{hostname}}
      - CLIENT_APP_URL=https://register.${STACK}.{{hostname}}
      - DOMAIN=${STACK}.{{hostname}}
      - MINIO_BUCKET=${STACK}__ocrvs
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.gateway.rule=Host(`gateway.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.gateway.loadbalancer.server.port=7070'
        - 'traefik.http.routers.gateway.tls=true'
        - 'traefik.http.routers.gateway.tls.certresolver=certResolver'
        - 'traefik.http.routers.gateway.entrypoints=web,websecure'
        - 'traefik.http.routers.gateway.middlewares=gzip-compression'
        - 'traefik.docker.network=dependencies_overlay_net'
        - 'traefik.http.middlewares.gateway.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.gateway.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.gateway.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.gateway.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.gateway.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.gateway.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'gateway'

  workflow:
    image: opencrvs/ocrvs-workflow:${VERSION}
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - LANGUAGES=en,fr
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'workflow'

  search:
    image: opencrvs/ocrvs-search:${VERSION}
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - OPENCRVS_INDEX_NAME=${STACK}__ocrvs
      - ES_HOST=search-user:${ROTATING_SEARCH_ELASTIC_PASSWORD}@elasticsearch:9200
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - HEARTH_MONGO_URL=mongodb://hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/${STACK}__hearth-dev?replicaSet=rs0
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'search'
  metrics:
    image: opencrvs/ocrvs-metrics:${VERSION}
    secrets:
      - jwt-public-key.{{ts}}
    volumes:
      - /data/vsexport:/usr/src/app/packages/metrics/src/scripts
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://metrics:${METRICS_MONGODB_PASSWORD}@mongo1/${STACK}__metrics?replicaSet=rs0
      - HEARTH_MONGO_URL=mongodb://hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/${STACK}__hearth-dev?replicaSet=rs0
      - DASHBOARD_MONGO_URL=mongodb://performance:${PERFORMANCE_MONGODB_PASSWORD}@mongo1/${STACK}__performance?replicaSet=rs0
    deploy:
      placement:
        constraints:
          - node.labels.data1 == true
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'metrics'

  auth:
    image: opencrvs/ocrvs-auth:${VERSION}
    secrets:
      - jwt-public-key.{{ts}}
      - jwt-private-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PRIVATE_KEY_PATH=/run/secrets/jwt-private-key.{{ts}}
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - LOGIN_URL=https://login.${STACK}.{{hostname}}
      - COUNTRY_CONFIG_URL=https://countryconfig.${STACK}.{{hostname}}
      - CLIENT_APP_URL=https://register.${STACK}.{{hostname}}
      - DOMAIN=${STACK}.{{hostname}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.auth.rule=Host(`auth.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.auth.loadbalancer.server.port=4040'
        - 'traefik.http.routers.auth.tls=true'
        - 'traefik.http.routers.auth.tls.certresolver=certResolver'
        - 'traefik.http.routers.auth.entrypoints=web,websecure'
        - 'traefik.docker.network=dependencies_overlay_net'
        - 'traefik.http.middlewares.auth.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.auth.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.auth.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.auth.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.auth.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.auth.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'auth'

  user-mgnt:
    image: opencrvs/ocrvs-user-mgnt:${VERSION}
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - RECORD_SEARCH_QUOTA=2000
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://user-mgnt:${USER_MGNT_MONGODB_PASSWORD}@mongo1/${STACK}__user-mgnt?replicaSet=rs0
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'user-mgnt'

  webhooks:
    image: opencrvs/ocrvs-webhooks:${VERSION}
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - MONGO_URL=mongodb://webhooks:${WEBHOOKS_MONGODB_PASSWORD}@mongo1/${STACK}__webhooks?replicaSet=rs0
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.webhooks.rule=Host(`webhooks.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.webhooks.loadbalancer.server.port=2525'
        - 'traefik.http.routers.webhooks.tls=true'
        - 'traefik.http.routers.webhooks.tls.certresolver=certResolver'
        - 'traefik.http.routers.webhooks.entrypoints=web,websecure'
        - 'traefik.docker.network=dependencies_overlay_net'
        - 'traefik.http.middlewares.webhooks.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.webhooks.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.webhooks.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.webhooks.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.webhooks.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.webhooks.headers.stspreload=true'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'webhooks'

  config:
    image: opencrvs/ocrvs-config:${VERSION}
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - SENTRY_DSN=${SENTRY_DSN:-}
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MONGO_URL=mongodb://config:${CONFIG_MONGODB_PASSWORD}@mongo1/${STACK}__application-config?replicaSet=rs0
      - LOGIN_URL=https://login.${STACK}.{{hostname}}
      - CLIENT_APP_URL=https://register.${STACK}.{{hostname}}
      - DOMAIN=${STACK}.{{hostname}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.config.rule=Host(`config.${STACK}.{{hostname}}`) && !Path(`/dashboardQueries`)'
        - 'traefik.http.services.config.loadbalancer.server.port=2021'
        - 'traefik.http.routers.config.tls=true'
        - 'traefik.http.routers.config.tls.certresolver=certResolver'
        - 'traefik.http.routers.config.entrypoints=web,websecure'
        - 'traefik.docker.network=dependencies_overlay_net'
        - 'traefik.http.middlewares.config.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.config.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.config.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.config.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.config.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.config.headers.stspreload=true'
        - 'traefik.http.middlewares.block-internal-routes.ipwhitelist.sourcerange=255.255.255.255'
        - 'traefik.http.routers.block-dashboard-queries.rule=Host(`countryconfig.${STACK}.{{hostname}}`) && Path(`/dashboardQueries`)'
        - 'traefik.http.routers.block-dashboard-queries.middlewares=block-internal-routes'
      replicas: 1
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'config'

  documents:
    image: opencrvs/ocrvs-documents:${VERSION}
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
    secrets:
      - jwt-public-key.{{ts}}
    environment:
      - NODE_ENV=production
      - APN_SERVICE_URL=http://apm-server:8200
      - CERT_PUBLIC_KEY_PATH=/run/secrets/jwt-public-key.{{ts}}
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_URL=minio.${STACK}.{{hostname}}
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_BUCKET=${STACK}__ocrvs
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'documents'

  scheduler:
    image: opencrvs/ocrvs-scheduler:${VERSION}
    environment:
      - NODE_ENV=production
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=false'
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'scheduler'

  migration:
    image: opencrvs/ocrvs-migration:${VERSION}
    environment:
      - ELASTICSEARCH_INDEX_NAME=${STACK}__ocrvs
      - USER_MGNT_MONGO_URL=mongodb://user-mgnt:${USER_MGNT_MONGODB_PASSWORD}@mongo1/${STACK}__user-mgnt?replicaSet=rs0
      - PERFORMANCE_MONGO_URL=mongodb://performance:${PERFORMANCE_MONGODB_PASSWORD}@mongo1/${STACK}__performance?replicaSet=rs0
      - APPLICATION_CONFIG_MONGO_URL=mongodb://config:${CONFIG_MONGODB_PASSWORD}@mongo1/${STACK}__application-config?replicaSet=rs0
      - HEARTH_MONGO_URL=mongodb://hearth:${HEARTH_MONGODB_PASSWORD}@mongo1/${STACK}__hearth-dev?replicaSet=rs0
      - OPENHIM_MONGO_URL=mongodb://openhim:${OPENHIM_MONGODB_PASSWORD}@mongo1/${STACK}__openhim-dev?replicaSet=rs0
      - ES_HOST=search-user:${ROTATING_SEARCH_ELASTIC_PASSWORD}@elasticsearch:9200
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_BUCKET=${STACK}__ocrvs
      - SUPER_USER_PASSWORD=${SUPER_USER_PASSWORD}
      - STACK=${STACK}
    deploy:
      labels:
        - 'traefik.enable=false'
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'migration'
  mongo-on-update:
    image: mongo:4.4
    command: bash /on-deploy.sh
    configs:
      - source: mongo-on-deploy.{{ts}}
        target: /on-deploy.sh
    deploy:
      labels:
        - traefik.enable=false
      replicas: 1
      restart_policy:
        condition: none
    environment:
      - REPLICAS=1
      - DATABASE_PREFIX=${STACK}
      - MONGODB_ADMIN_USER=${MONGODB_ADMIN_USER}
      - MONGODB_ADMIN_PASSWORD=${MONGODB_ADMIN_PASSWORD}
      - USER_MGNT_MONGODB_PASSWORD=${USER_MGNT_MONGODB_PASSWORD}
      - HEARTH_MONGODB_PASSWORD=${HEARTH_MONGODB_PASSWORD}
      - CONFIG_MONGODB_PASSWORD=${CONFIG_MONGODB_PASSWORD}
      - PERFORMANCE_MONGODB_PASSWORD=${PERFORMANCE_MONGODB_PASSWORD}
      - METRICS_MONGODB_PASSWORD=${METRICS_MONGODB_PASSWORD}
      - OPENHIM_MONGODB_PASSWORD=${OPENHIM_MONGODB_PASSWORD}
      - WEBHOOKS_MONGODB_PASSWORD=${WEBHOOKS_MONGODB_PASSWORD}
      - NOTIFICATION_MONGODB_PASSWORD=${NOTIFICATION_MONGODB_PASSWORD}
    networks:
      - overlay_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://127.0.0.1:12201'
        tag: 'mongo-on-update'

  dashboards:
    image: opencrvs/ocrvs-dashboards:${VERSION}
    volumes:
      - /data/metabase:/data/metabase
      # Exceed Docker config file 500 kb file limit, thus a volume mount
      - /opt/opencrvs/infrastructure/metabase/metabase.init.db.sql:/metabase.init.db.sql
    networks:
      - overlay_net
    environment:
      # Note that only mongo1 is used here on purpose for all environments
      # https://discourse.metabase.com/t/solved-add-mongodb-replicaset-database/7404/2
      - OPENCRVS_METABASE_DB_HOST=mongo1
      - OPENCRVS_METABASE_DB_USER=performance
      - OPENCRVS_METABASE_DB_PASS=${PERFORMANCE_MONGODB_PASSWORD}
      - OPENCRVS_METABASE_DB_AUTH_DB=${STACK}__performance
      - OPENCRVS_METABASE_SITE_NAME=OpenCRVS Dashboards
      - OPENCRVS_METABASE_SITE_URL=http://metabase.${STACK}.{{hostname}}
      - OPENCRVS_METABASE_MAP_NAME=Farajaland
      - OPENCRVS_METABASE_MAP_URL=http://countryconfig:3040/content/map.geojson
      - OPENCRVS_METABASE_MAP_REGION_KEY=State
      - OPENCRVS_METABASE_MAP_REGION_NAME=State
      - OPENCRVS_METABASE_ADMIN_EMAIL=${OPENCRVS_METABASE_ADMIN_EMAIL}
      - OPENCRVS_METABASE_ADMIN_PASSWORD=${OPENCRVS_METABASE_ADMIN_PASSWORD}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.metabase.rule=Host(`metabase.${STACK}.{{hostname}}`)'
        - 'traefik.http.services.metabase.loadbalancer.server.port=4444'
        - 'traefik.http.routers.metabase.tls=true'
        - 'traefik.http.routers.metabase.tls.certresolver=certResolver'
        - 'traefik.http.routers.metabase.entrypoints=web,websecure'
        - 'traefik.docker.network=dependencies_overlay_net'
        - 'traefik.http.middlewares.metabase.headers.customresponseheaders.Pragma=no-cache'
        - 'traefik.http.middlewares.metabase.headers.customresponseheaders.Cache-control=no-store'
        - 'traefik.http.middlewares.metabase.headers.customresponseheaders.X-Robots-Tag=none'
        - 'traefik.http.middlewares.metabase.headers.stsseconds=31536000'
        - 'traefik.http.middlewares.metabase.headers.stsincludesubdomains=true'
        - 'traefik.http.middlewares.metabase.headers.stspreload=true'
      replicas: 1
      placement:
        constraints:
          - node.labels.data1 == true
secrets:
  jwt-public-key.{{ts}}:
    external: true
  jwt-private-key.{{ts}}:
    external: true
configs:
  hearth-check-dupe-plugin.{{ts}}:
    file: /opt/opencrvs/infrastructure/hearth-plugins/checkDuplicateTask.js
  hearth-queryparam-extensions-conf.{{ts}}:
    file: /opt/opencrvs/infrastructure/hearth-queryparam-extensions.json
  metricbeat-conf.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/beats/metricbeat.yml
  filebeat.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/filebeat/filebeat.yml
  mongo-on-deploy.{{ts}}:
    file: /opt/opencrvs/infrastructure/mongodb/on-deploy.sh
  beat-rollover-policy.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/beats/rollover-policy.json
  kibana.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/kibana/kibana.yml
  apm.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/apm/apm-server.yml
  logstash.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/logstash/logstash.yml
  logstash-pipeline.{{ts}}:
    file: /opt/opencrvs/infrastructure/monitoring/logstash/logstash.conf
  influxdb-conf.{{ts}}:
    file: /opt/opencrvs/infrastructure/influxdb.conf
  jvm-options.{{ts}}:
    file: /opt/opencrvs/infrastructure/elasticsearch/jvm.options
  minio-mc-config.{{ts}}:
    file: /opt/opencrvs/infrastructure/mc-config/config.json
networks:
  overlay_net:
    driver: overlay
    attachable: true
